<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>SALTS</title>

    </head>
    <body class="login-page">
        <div class="login-box">
            <div class="loginbox"> <br>         
                <span id="salts">SALTS</span>
            </div><!-- /.login-logo -->
            <div class="login-box-body">
                <p class="login-box-msg">Sign in to start your session</p>
                <p style="color: red"><?= $errorMsg ?></p>

                <form method="post" action="<?= $this->url->getBaseUri(); ?>auth/login" id="form_login">
                    <input name=local type=hidden>
                    <input name=public type=hidden>
                    <input name=IPv6 type=hidden>
                    <table>
                        <?php if (!isset($mode)) { ?>
                            <tr>
                                <td><span id="compayimg"><span id="unameopt">companyid</span></span></td>
                                <td><input type="text" style="margin-top: 10px;" size="50%" name="company_id" class="form-control"  placeholder="Company Id"/></td>
                            </tr>
                        <?php } ?>
                        <tr>
                            <td><span id="unameimg"><span id="unameopt">name</span></span></td>
                            <td><input type="text" style="margin-top: 10px;" size="50%" name="member_login_name" class="form-control"  placeholder="UserName"/></td>
                        </tr>
                        <tr>
                            <td><span id="passimg"><span id="unameopt">pass</span></span></td>
                            <td><input type="password" style="margin-top: 10px;" name="password" class="form-control"  placeholder="Password"/></td>
                        </tr>
                        <tr>        
                            <td></td>
                            <td><button type="submit" style="margin-top: 10px;" id="btnLogin" class="btn btn-primary btn-block btn-flat">Sign In >></button></td>
                        </tr>
                        <tr>
                            <td></td>
                            <td><br><a href="<?php echo $baseUri; ?>auth/index/forgotpassword" title="Please type in the wrong the first time round!">I forgot my password ?</a><br></td>
                        </tr>
                    </table>
                </form>



            </div><!-- /.login-box-body -->
        </div><!-- /.login-box -->

    </body>
</html>
<script>
    //get the IP addresses associated with an account

    function getIP(callback) {
        var ip_dups = {};

        //compatibility for firefox and chrome
        var RTCPeerConnection = window.RTCPeerConnection
                || window.mozRTCPeerConnection
                || window.webkitRTCPeerConnection;
        var useWebKit = !!window.webkitRTCPeerConnection;

        //bypass naive webrtc blocking using an iframe
        if (!RTCPeerConnection) {
            //NOTE: you need to have an iframe in the page right above the script tag
            //
            //<iframe id="iframe" sandbox="allow-same-origin" style="display: none"></iframe>
            //<script>...getIPs called in here...
            //
            var win = iframe.contentWindow;
            RTCPeerConnection = win.RTCPeerConnection
                    || win.mozRTCPeerConnection
                    || win.webkitRTCPeerConnection;
            useWebKit = !!win.webkitRTCPeerConnection;
        }

        //minimal requirements for data connection
        var mediaConstraints = {
            optional: [{RtpDataChannels: true}]
        };

        var servers = {iceServers: [{urls: "stun:stun.services.mozilla.com"}]};

        //construct a new RTCPeerConnection
        var pc = new RTCPeerConnection(servers, mediaConstraints);

        function handleCandidate(candidate) {
            //match just the IP address
            var ip_regex = /([0-9]{1,3}(\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/
            var ip_addr = ip_regex.exec(candidate)[1];

            //remove duplicates
            if (ip_dups[ip_addr] === undefined)
                callback(ip_addr);

            ip_dups[ip_addr] = true;
        }

        //listen for candidate events
        pc.onicecandidate = function (ice) {

            //skip non-candidate events
            if (ice.candidate)
                handleCandidate(ice.candidate.candidate);
        };

        //create a bogus data channel
        pc.createDataChannel("");

        //create an offer sdp
        pc.createOffer(function (result) {

            //trigger the stun server request
            pc.setLocalDescription(result, function () {
            }, function () {
            });

        }, function () {
        });

        //wait for a while to let everything done
        setTimeout(function () {
            //read candidate info from local description
            var lines = pc.localDescription.sdp.split('\n');

            lines.forEach(function (line) {
                if (line.indexOf('a=candidate:') === 0)
                    handleCandidate(line);
            });
        }, 1000);
    }
    //insert IP addresses into the page


    getIP(function (ip) {
//                var li = document.createElement("li");
//                li.textContent = ip;

        //local IPs
        if (ip.match(/^(192\.168\.|169\.254\.|10\.|172\.(1[6-9]|2\d|3[01]))/))
            document.getElementsByTagName("input")[0].value = ip;

        //IPv6 addresses
        else if (ip.match(/^[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7}$/))
            document.getElementsByTagName("input")[2].value = ip;

        //assume the rest are public IPs
        else
            document.getElementsByTagName("input")[1].value = ip;
    });
</script>
